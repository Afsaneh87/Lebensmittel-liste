
# Lebensmittel-seite

Das Ziel dieses Projekts besteht darin, eine Liste zu erstellen, die ein Element akzeptiert und lokal speichert.
 Wenn der Benutzer versucht, ein leeres Element einzugeben, gibt das Programm eine Warnung aus.
  Wenn der Benutzer ein Element erfolgreich eingibt, zeigt ihm das Programm außerdem eine wichtige Nachricht an.


In diesem Projekt wird jedes Mal, wenn ein Element hinzugefügt wird, das Element im DOM angezeigt und auch im lokalen Speicher des Benutzers gespeichert. 
Wenn der Benutzer außerdem auf die Schaltfläche „Elemente löschen“ klickt, werden alle Elemente aus dem DOM und dem lokalen Speicher entfernt. 
Die in diesem Projekt verwendeten Themen umfassen Folgendes:


. DOM-Manipulationen                       (دست‌کاری‌های DOM)
. JavaScript-Funktion                      (توابع جاوا اسکریپت)
. Ereignis-Listener                        (شنونده رویداد)
. For-Schleife in JavaScript               (حلقه For در جاوا اسکریپت)
. Lokale Speicherung in JavaScript         (ذخیره‌سازی محلی در جاوا اسکریپت)  
. CSS-Manipulationen                       (دست‌کاری CSS)
. Conditional-rendering in JavaScript         (گزاره شرطی در جاوا اسکریپت)
 

 #Backend richtung


Titel: Verknüpfung einer Lebensmittelseite mit einem Node.js-Backend



1.Einrichten des Projekts

    .Erstelle ein neues Verzeichnis für das Projekt
    .Initialisiere ein neues Node.js-Projekt mit npm
    .Installiere erforderliche Abhängigkeiten: Express, Mongoose und body-parser

2.Erstellen der Serverdatei

    .Erstelle eine neue Datei namens "server.js"
    .Importiere die benötigten Module: Express, body-parser und Mongoose
    .Erstelle eine Express-App und weise sie einer Variablen zu
    .Verbinde dich mit der MongoDB-Datenbank
    .Definiere ein Mongoose-Schema für Lebensmittel
    .Erstelle ein Mongoose-Modell basierend auf dem Schema
    .Implementiere Routen für Lebensmittel: GET-Anfrage für alle Lebensmittel und POST-Anfrage zum Hinzufügen eines Lebensmittels
    .Starte den Server

3.Starten des Servers

    .Führe den Befehl node server.js im Terminal aus

4.Verknüpfen des Frontends

    .Passe das Frontend an, um Anfragen an die entsprechenden Server-Endpunkte zu senden
    .Beispielcode für den Abruf aller Lebensmittel und das Hinzufügen eines neuen Lebensmittels

5.Abschluss und Ausblick

    .Zusammenfassung der Schritte und des erreichten Ergebnisses
    .Hinweis auf weitere Möglichkeiten zur Erweiterung des Projekts (z. B. Aktualisierung und Löschung von Lebensmitteln)
